import { manageTaskButtons, ManageTaskKeyboardOptions } from '../../../../helpers/keyboard'
import { Action } from '../../../../types/actions'
import { Optional, Role, TaskProgress, TaskQueue } from '../../../../types/models'
import { TaskData } from '../common-individual-single'

export const keyboard = (
  data: TaskData,
  progress: Optional<TaskProgress | TaskQueue>,
  options: ManageTaskKeyboardOptions
) => {
  const buttons: Record<string, Action> = {}

  // –ª–∏–¥–µ—Ä
  if (options.role === Role.leader) {
    buttons['üîî –Ω–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ'] = Action.remind_confirm
  }

  // –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç
  if (!progress) {
    buttons['—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å'] = Action.individual_task_doing
  }

  // —É—á–∞—Å—Ç–≤—É–µ—Ç
  if (progress === TaskProgress.doing) {
    buttons['–ø—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ'] = Action.individual_task_done
    buttons['–ø–µ—Ä–µ–¥—É–º–∞–ª'] = Action.individual_task_cancel
  }

  // –ø—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ
  if (progress === TaskProgress.done) {
    buttons['–æ—Ç–º–µ–Ω–∞'] = Action.individual_task_cancel
  }

  return manageTaskButtons(data, options, buttons)
}
